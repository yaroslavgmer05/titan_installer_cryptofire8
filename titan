echo -e "${CYAN}–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –Ω–æ–¥—ã Hemi –æ—Ç Crypto Fire, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏ –∞–≤—Ç–æ—Ä–∞ –∏ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª t.me/cryptofire8!${NC}"

download_node() {
  if [ -d "$HOME/.titanedge" ]; then
    echo "–ü–∞–ø–∫–∞ .titanedge —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª–∏—Ç–µ –Ω–æ–¥—É –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–Ω–æ–≤–æ. –í—ã—Ö–æ–¥..."
    return 0
  fi

  sudo apt install lsof

  ports=(1234 55702 48710)

  for port in "${ports[@]}"; do
    if [[ $(lsof -i :"$port" | wc -l) -gt 0 ]]; then
      echo "–û—à–∏–±–∫–∞: –ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ —Å–º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è."
      exit 1
    fi
  done

  echo -e "–í—Å–µ –ø–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã! –°–µ–π—á–∞—Å –Ω–∞—á–Ω–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞...\n"

  echo '–ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É...'

  cd $HOME

  sudo apt update -y && sudo apt upgrade -y
  sudo apt-get install nano git gnupg lsb-release apt-transport-https jq screen ca-certificates curl -y

  if ! command -v docker &> /dev/null; then
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    rm get-docker.sh
  else
    echo "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º"
  fi

  if ! command -v docker-compose &> /dev/null; then
    sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
  else
    echo "Docker-Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º"
  fi

  echo '–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ã–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –Ω–æ–¥—É 2 –ø—É–Ω–∫—Ç–æ–º.'
}

launch_node() {
  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | shuf -n $(docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | wc -l) | while read container_id; do
    docker stop "$container_id"
    docker rm "$container_id"
  done

  while true; do
    echo -en "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à HASH:${NC} "
    read HASH
    if [ ! -z "$HASH" ]; then
        break
    fi
    echo 'HASH –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.'
  done

  docker run --network=host -d -v ~/.titanedge:$HOME/.titanedge nezha123/titan-edge
  sleep 10

  docker run --rm -it -v ~/.titanedge:$HOME/.titanedge nezha123/titan-edge bind --hash=$HASH https://api-test1.container1.titannet.io/api/v2/device/binding
  
  echo -e "–ù–æ–¥–∞ –±—ã–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞."
}

update_sysctl_config() {
    local CONFIG_VALUES="
net.core.rmem_max=26214400
net.core.rmem_default=26214400
net.core.wmem_max=26214400
net.core.wmem_default=26214400
"
    local SYSCTL_CONF="/etc/sysctl.conf"

    echo "–î–µ–ª–∞–µ–º —Ä–µ–∑–µ—Ä–≤ –¥–ª—è sysctl.conf.bak..."
    sudo cp "$SYSCTL_CONF" "$SYSCTL_CONF.bak"

    echo "–û–±–Ω–æ–≤–ª—è–µ–º sysctl.conf —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..."
    echo "$CONFIG_VALUES" | sudo tee -a "$SYSCTL_CONF" > /dev/null

    echo "–ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..."
    sudo sysctl -p

    echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–∏–ª–∏—Å—å."

    if command -v setenforce &> /dev/null; then
        echo "–£–±–∏—Ä–∞–µ–º SELinux..."
        sudo setenforce 0
    else
        echo "SELinux –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    fi
}

many_node() {
  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | shuf -n $(docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | wc -l) | while read container_id; do
    docker stop "$container_id"
    docker rm "$container_id"
  done

  echo -e "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à HASH:"
  read -p "> " id

  update_sysctl_config

  storage_gb=50
  start_port=1235
  container_count=5

  public_ips=$(curl -s https://api.ipify.org)

  if [ -z "$public_ips" ]; then
    echo -e "–ù–µ —Å–º–æ–≥ –ø–æ–ª—É—á–∏—Ç—å IP –∞–¥—Ä–µ—Å."
    exit 1
  fi

  docker pull nezha123/titan-edge

  current_port=$start_port
  for ip in $public_ips; do
      echo -e "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–¥—É –Ω–∞ –ê–ô–ü–ò $ip"
  
      for ((i=1; i<=container_count; i++)); do
          storage_path="$HOME/titan_storage_${ip}_${i}"
  
          sudo mkdir -p "$storage_path"
          sudo chmod -R 777 "$storage_path"
  
          container_id=$(docker run -d --restart always -v "$storage_path:$HOME/.titanedge/storage" --name "titan_${ip}_${i}" --net=host nezha123/titan-edge)
  
          echo -e "–ù–æ–¥–∞ titan_${ip}_${i} –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å —Å ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º $container_id"
  
          sleep 30
  
          docker exec $container_id bash -c "\
              sed -i 's/^[[:space:]]*#StorageGB = .*/StorageGB = $storage_gb/' $HOME/.titanedge/config.toml && \
              sed -i 's/^[[:space:]]*#ListenAddress = \"0.0.0.0:1234\"/ListenAddress = \"0.0.0.0:$current_port\"/' $HOME/.titanedge/config.toml && \
              echo '–•—Ä–∞–Ω–∏–ª–∏—â–µ titan_${ip}_${i} –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–∞ $storage_gb GB, –ü–æ—Ä—Ç –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ $current_port'"
  
          docker restart $container_id

          docker exec $container_id bash -c "\
              titan-edge bind --hash=$id https://api-test1.container1.titannet.io/api/v2/device/binding"
          echo -e "–ù–æ–¥–∞ titan_${ip}_${i} –±—ã–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞."
  
          current_port=$((current_port + 1))
      done
  done
}

docker_logs() {
  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | shuf -n $(docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | wc -l) | while read container_id; do
    docker logs "$container_id"
  done
}

restart_node() {
  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | shuf -n $(docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | wc -l) | while read container_id; do
    docker restart "$container_id"
  done
  echo '–ù–æ–¥–∞ –±—ã–ª–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.'
}

stop_node() {
  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | shuf -n $(docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | wc -l) | while read container_id; do
    docker stop "$container_id"
  done
  echo '–ù–æ–¥–∞ –±—ã–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.'
}

delete_node() {
  read -p '–ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã —É–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É, –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–π —Å–∏–º–≤–æ–ª (CTRL+C —á—Ç–æ–±—ã –≤—ã–π—Ç–∏): ' checkjust

  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | shuf -n $(docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | wc -l) | while read container_id; do
    docker stop "$container_id"
    docker rm "$container_id"
  done

  sudo rm -r $HOME/.titanedge

  echo '–ù–æ–¥–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.'
}

exit_from_script() {
  exit 0
}

while true; do
    channel_logo
    sleep 2
    echo -e "\n\n–ú–µ–Ω—é:"
    echo "1. üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "2. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É"
    echo "3. üìú –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏"
    echo "4. ‚úÖ –ü–æ—Å—Ç–∞–≤–∏—Ç—å 5 –Ω–æ–¥"
    echo "5. üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–¥—É"
    echo "6. ‚õî –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "7. üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
    echo -e "8. ‚ùå –í—ã–π—Ç–∏ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞\n"
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice

    case $choice in
      1)
        download_node
        ;;
      2)
        launch_node
        ;;
      3)
        docker_logs
        ;;
      4)
        many_node
        ;;
      5)
        restart_node
        ;;
      6)
        stop_node
        ;;
      7)
        delete_node
        ;;
      8)
        exit_from_script
        ;;
      *)
        echo "–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É –≤ –º–µ–Ω—é."
        ;;
    esac
  done
