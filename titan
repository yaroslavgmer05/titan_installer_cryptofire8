#!/bin/bash

echo -e '\033[0;31m'
echo -e ' ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó'
echo -e ' ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù'
echo -e ' ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  '
echo -e ' ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  '
echo -e ' ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó'
echo -e ' ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù'
echo -e '\033[0m'
echo -e "üî• –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ @cryptofire8 –≤ Telegram [üöÄ]"

download_node() {
  if [ -d "$HOME/.titanedge" ]; then
    echo "–ü–∞–ø–∫–∞ .titanedge —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª–∏—Ç–µ –Ω–æ–¥—É –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–Ω–æ–≤–æ. –í—ã—Ö–æ–¥..."
    return 0
  fi

  sudo apt update -y && sudo apt upgrade -y
  sudo apt install -y nano git gnupg lsb-release apt-transport-https jq screen ca-certificates curl lsof

  ports=(1234 55702 48710)
  for port in "${ports[@]}"; do
    if lsof -i :"$port" &>/dev/null; then
      echo "–û—à–∏–±–∫–∞: –ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ —Å–º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è."
      exit 1
    fi
  done

  echo -e "–í—Å–µ –ø–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã! –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É...\n"

  if ! command -v docker &>/dev/null; then
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    rm get-docker.sh
  else
    echo "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
  fi

  if ! command -v docker-compose &>/dev/null; then
    sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
  else
    echo "Docker-Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
  fi

  echo "–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –Ω–æ–¥—É, –≤—ã–±—Ä–∞–≤ –ø—É–Ω–∫—Ç 2."
}

launch_node() {
  docker stop $(docker ps -aq --filter "ancestor=nezha123/titan-edge") &>/dev/null
  docker rm $(docker ps -aq --filter "ancestor=nezha123/titan-edge") &>/dev/null

  read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à HASH: " HASH
  [ -z "$HASH" ] && { echo "HASH –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º."; return; }

  docker run --network=host -d -v "$HOME/.titanedge:$HOME/.titanedge" nezha123/titan-edge
  sleep 10

  docker run --rm -it -v "$HOME/.titanedge:$HOME/.titanedge" nezha123/titan-edge bind --hash="$HASH" https://api-test1.container1.titannet.io/api/v2/device/binding

  echo "–ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞."
}

update_sysctl_config() {
  echo "–î–µ–ª–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é sysctl.conf..."
  sudo cp /etc/sysctl.conf /etc/sysctl.conf.bak

  cat <<EOF | sudo tee -a /etc/sysctl.conf
net.core.rmem_max=26214400
net.core.rmem_default=26214400
net.core.wmem_max=26214400
net.core.wmem_default=26214400
EOF

  sudo sysctl -p
  echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã."
}

restart_node() {
  docker restart $(docker ps -aq --filter "ancestor=nezha123/titan-edge") &>/dev/null
  echo "–ù–æ–¥–∞ –±—ã–ª–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞."
}

stop_node() {
  docker stop $(docker ps -aq --filter "ancestor=nezha123/titan-edge") &>/dev/null
  echo "–ù–æ–¥–∞ –±—ã–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞."
}

delete_node() {
  read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É? (y/n): " confirm
  [[ "$confirm" != "y" ]] && return
  
  docker stop $(docker ps -aq --filter "ancestor=nezha123/titan-edge") &>/dev/null
  docker rm $(docker ps -aq --filter "ancestor=nezha123/titan-edge") &>/dev/null
  sudo rm -rf "$HOME/.titanedge"

  echo "–ù–æ–¥–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞."
}

docker_logs() {
  docker logs $(docker ps -aq --filter "ancestor=nezha123/titan-edge")
}

while true; do
  echo -e "\n–ú–µ–Ω—é:"
  echo "1. üõ† –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
  echo "2. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É"
  echo "3. üìú –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏"
  echo "4. üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–¥—É"
  echo "5. ‚õî –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
  echo "6. üóë –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
  echo "7. ‚ùå –í—ã–π—Ç–∏"
  read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice

  case $choice in
    1) download_node ;;
    2) launch_node ;;
    3) docker_logs ;;
    4) restart_node ;;
    5) stop_node ;;
    6) delete_node ;;
    7) exit 0 ;;
    *) echo "–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥." ;;
  esac
done
